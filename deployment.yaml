apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamlit-frontend-deployment
  labels:
    app: streamlit-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: streamlit-frontend
  template:
    metadata:
      labels:
        app: streamlit-frontend
    spec:
      containers:
        - name: streamlit-frontend
          image: ghcr.io/big-data-01-org/frontend/frontend:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8501

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-ingestion-deployment
  labels:
    app: data-ingestion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-ingestion
  template:
    metadata:
      labels:
        app: data-ingestion
    spec:
      containers:
        - name: data-ingestion
          image: ghcr.io/big-data-01-org/backend/data-ingestion:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      restartPolicy: Never

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-learning-deployment
  labels:
    app: machine-learning
spec:
  replicas: 1
  selector:
    matchLabels:
      app: machine-learning
  template:
    metadata:
      labels:
        app: machine-learning
    spec:
      containers:
        - name: machine-learning
          image: ghcr.io/big-data-01-org/backend/machine-learning:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
      restartPolicy: Never

---


apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-deployment
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: apache/kafka:3.9.0
          ports:
            - containerPort: 9092
            - containerPort: 9093

          env:
            # Unique ID for this Kafka broker
            - name: KAFKA_NODE_ID
              value: "1"

            # Set KRaft mode roles
            - name: KAFKA_PROCESS_ROLES
              value: "broker,controller"

            # Specify listeners
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://:9092,CONTROLLER://:9093"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "PLAINTEXT://kafka-service:9092"

            # Security protocol mappings
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"

            # Metadata quorum configuration
            - name: KAFKA_CONTROLLER_QUORUM_VOTERS
              value: "1@localhost:9093"

            # Controller listener names
            - name: KAFKA_CONTROLLER_LISTENER_NAMES
              value: "CONTROLLER"
            # Logs and replication settings
            - name: KAFKA_LOG_DIRS
              value: "/tmp/kafka-logs"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TRANSACTION_STATE_LOG_MIN_ISR
              value: "1"
          volumeMounts:
            - name: kafka-data
              mountPath: /var/lib/kafka
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m" # 1 CPU core
            requests:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: kafka-data
          persistentVolumeClaim: # Persistent volume claim for Kafka data, to persist data even if the pod is deleted
            claimName: kafka-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: streamlit-frontend-service
spec:
  type: NodePort
  selector:
    app: streamlit-frontend
  ports:
    - protocol: TCP
      port: 8501
      targetPort: 8501
      nodePort: 30501

---

apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  type: NodePort
  selector:
    app: kafkal
  ports:
    - name: kafka-port
      protocol: TCP
      port: 9092
      targetPort: 9092
      nodePort: 30092
    - name: controller-port
      protocol: TCP
      port: 9093
      targetPort: 9093
      nodePort: 30093

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
